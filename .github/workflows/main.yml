# .github/workflows/main.yml
name: Django CI/CD

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install psycopg2-binary pytest-django gunicorn dj-database-url whitenoise

    - name: Wait for PostgreSQL and Run Migrations
      env:
        DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
        DJANGO_SETTINGS_MODULE: core.settings
      run: |
        for i in `seq 1 10`; do
          nc -z localhost 5432 && break
          echo "Waiting for Postgres to be ready..."
          sleep 5
        done
        python manage.py migrate

    - name: Run tests
      env:
        DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
        SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY_CI || 'una_clave_secreta_dummy_para_ci' }}
        EXCHANGE_RATE_API_KEY: ${{ secrets.EXCHANGE_RATE_API_KEY }}
        DJANGO_SETTINGS_MODULE: core.settings
      run: |
        pytest

    - name: Deploy to Railway with Action
      if: success()
      uses: railwayapp/github-action@latest
      with:
        service_id: ${{ secrets.RAILWAY_SERVICE_ID }}
        project_id: ${{ secrets.RAILWAY_PROJECT_ID }}
        token: ${{ secrets.RAILWAY_TOKEN }}